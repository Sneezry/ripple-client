section.col-xs-12.content(ng-controller="TradeCtrl")

  //- Disconnected

  group.disconnected(ng-hide="connected")
    p.literal You have to be online to see this screen

  group.disconnected(ng-hide="!connected || loadState.offers")
    p.literal Loading order book...

  //- Connected

  group(ng-show="connected && loadState.offers")
    .settings
      .row
        .col-sm-5.col-md-3.currency-config
          input.form-control.currency#currency_pair(
            name='currency_pair', type='text'
            rp-combobox="pairs_query", rp-combobox-select
            ng-model='order.currency_pair')
        .col-sm-7.col-md-9
          ul.issuers.inline(ng-show='order.first_currency != "XRP"')
            li.label Base currency
            li.value {{order.first_currency}}&ensp;
              span(
                rp-pretty-issuer="order.first_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "first"'
              ng-click='edit_first_issuer()')
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "first"'
              ng-click='show_issuer_form = false')
              | cancel
          ul.issuers.inline(ng-show='order.first_currency == "XRP"')
            li.label Base currency
            li.value XRP
          ul.issuers.inline(ng-show='order.second_currency != "XRP"')
            li.label Counter currency
            li.value {{order.second_currency}}&ensp;
              span(
                rp-pretty-issuer="order.second_issuer"
                rp-pretty-issuer-contacts="userBlob.data.contacts"
                ) ???
            li: a(href=""
              ng-show='show_issuer_form != "second"'
              ng-click='edit_second_issuer()')
              | change issuer
            li: a(href=""
              ng-show='show_issuer_form == "second"'
              ng-click='show_issuer_form = false')
              | cancel
          ul.issuers.inline(ng-show='order.second_currency == "XRP"')
            li.label Counter currency
            li.value XRP

    form.issuer.first-issuer(name='first_issuer_form', ng-show='show_issuer_form == "first"')
      label(for='first_issuer') Base currency issuer ({{order.first_currency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#first_issuer(
            name='first_issuer', type='text', rp-combobox="issuer_query"
            placeholder='Contact name or Ripple address'
            ng-model='order.first_issuer_edit'
            rp-dest, rp-dest-address, rp-dest-contact)
          .errorGroup(rp-errors='first_issuer')
            .error(rp-error-on='rpDest') Not a valid Ripple address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit', ng-click='save_first_issuer()', ng-disabled="first_issuer_form.$invalid") Confirm

    form.issuer.second-issuer(name='second_issuer_form', ng-show='show_issuer_form == "second"')
      label(for='second_issuer') Counter currency issuer ({{order.second_currency}})
      .row
        .col-xs-12.col-sm-8.col-md-5
          input.form-control#second_issuer(
            name='second_issuer', type='text', rp-combobox="issuer_query"
            placeholder='Contact name or Ripple address'
            ng-model='order.second_issuer_edit'
            rp-dest, rp-dest-address, rp-dest-contact)
          .errorGroup(rp-errors='second_issuer')
            .error(rp-error-on='rpDest') Not a valid ripple address or contact
        .col-xs-12.col-sm-4.col-md-2
          button.btn.btn-block.btn-success.submit(type='submit', ng-click='save_second_issuer()', ng-disabled="second_issuer_form.$invalid") Confirm

    .message-select-issuer(ng-hide="order.valid_settings")
      | You must select an issuer to trade currencies. Click the “change issuer”, link above and enter your trusted gateway address or nickname.

    group(ng-if="order.valid_settings")
      ul.ticker
        .row
          li.col-xs-6.col-sm-3
            span Bid =&nbsp;
            span.value
              | {{book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Ask =&nbsp;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Spread =&nbsp;
            span.value
              | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamountsubtract:(book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays) | rpamount:{rel_precision: 5, rel_min_precision: 5} }}
          li.col-xs-6.col-sm-3
            span Last price =&nbsp;
            span.value
              | {{book.last_price | rpamount:{rel_precision: 5, rel_min_precision: 5} }}

      //- Show message if account has not been funded yet.
      .unfunded(ng-hide="account.Balance")
        p.literal You have to be funded before you can trade

      //- 1. Order form
      .order-type(ng-class="{open: order.type}", ng-show="mode == 'trade' && account.Balance")
        .btn-group
          button.btn.btn-default(
            type="button"
            ng-class="{'btn-info': order.type == 'buy' }"
            ng-click="order.type = 'buy'") Buy {{order.first_currency}}
          button.btn.btn-default(
            type="button"
            ng-class="{'btn-info': order.type == 'sell' }"
            ng-click="order.type = 'sell'") Sell {{order.first_currency}}
      group.trade-widget(ng-switch="mode", ng-show="account.Balance")
        div(ng-switch-when='trade')
          form.mode-form(name='orderForm', ng-submit='place_order()', ng-class="{visible: order.type}", ng-show="order.showWidget")
            .row.order-values
              .col-sm-4
                .value-field
                  label(for='order_amount', ng-show="order.type == 'sell'") Amount To Sell
                  label(for='order_amount', ng-show="order.type == 'buy'") Amount To Buy
                  .input-group
                    input.form-control#order_amount(
                      name='amount', type='text'
                      ng-model='order.first', ng-change='calc_second()'
                      rp-amount
                      rp-amount-positive
                      rp-amount-xrp-limit
                      rp-amount-xrp-limit-currency="{{order.first_currency}}"
                      required)
                    .input-group-addon {{order.first_currency}}
                  .errorGroup(rp-errors='amount')
                    .error(rp-error-on='required') Required
                    .error(rp-error-on='rpAmount') Not a valid amount.
                    .error(rp-error-on='rpAmountPositive') Must be greater than zero
                    .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
              .col-sm-4
                .value-field
                  label(for='order_price') Price of Each
                  .input-group
                    input.form-control#order_price(
                      name='price', type='text'
                      ng-model='order.price', ng-change='calc_second()'
                      rp-amount
                      rp-amount-positive
                      rp-amount-xrp-limit
                      rp-amount-xrp-limit-currency="{{order.second_currency}}"
                      required)
                    .input-group-addon {{order.second_currency}}
                  .errorGroup(rp-errors='price')
                    .error(rp-error-on='required') Required
                    .error(rp-error-on='rpAmount') Not a valid amount.
                    .error(rp-error-on='rpAmountPositive') Must be greater than zero
                    .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
              .col-sm-4
                .value-field
                  label(for='order_value') Order Value
                  .input-group
                    input.form-control#order_value(
                      name='value', type='text'
                      ng-model='order.second', ng-change='calc_first()'
                      rp-amount
                      rp-amount-positive
                      rp-amount-xrp-limit
                      rp-amount-xrp-limit-currency="{{order.second_currency}}"
                      required)
                    .input-group-addon {{order.second_currency}}
                  .errorGroup(rp-errors='value')
                    .error(rp-error-on='required') Required
                    .error(rp-error-on='rpAmount') Not a valid amount.
                    .error(rp-error-on='rpAmountPositive') Must be greater than zero
                    .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
            .message
              p(ng-show='orderForm.$valid') You are wanting to {{order.type}}
                | {{order.first_amount | rpamount:{precision: 10} }} {{order.first_amount | rpcurrency}}
                | for
                | {{order.second_amount | rpamount:{precision: 10} }} {{order.second_amount | rpcurrency}}
                | ({{order.price_amount | rpamount:{precision: 10} }} {{order.second_amount | rpcurrency}}
                |  per {{order.first_amount | rpcurrency}})
            div
              button.btn.btn-success.submit(type='submit', ng-disabled='orderForm.$invalid') Place Order
          div(ng-hide="order.showWidget")
            p.literal Your balance is not enough to create an order.

        //- 2. Confirmation

        form.mode-confirm(ng-switch-when='confirm', ng-submit="order_confirmed()")
          p.literal You are about to create an order to {{order.type}}
            .amount_feedback
              span.value {{order.first_amount | rpamount}}
              span.currency  {{order.first_amount | rpcurrency}}
            p.literal for
            .dest_feedback
              span.value {{order.second_amount | rpamount}}
              span.currency  {{order.second_amount | rpcurrency}}
            p.literal Are you sure?
            .row.row-padding-small
              .col-xs-6.col-sm-offset-2.col-sm-4.col-md-offset-3.col-md-3
                button.btn.btn-block.btn-default.back(type='button', ng-click='back()') &laquo; Back
              .col-xs-6.col-sm-4.col-md-3
                button.btn.btn-block.btn-success.submit(type='submit', ng-disabled='confirm_wait') Confirm

        //- 3. Sending

        group.mode-sending(ng-switch-when='sending')
          p.throbber.literal Sending order to Ripple network...

        //- 4. Error

        group.mode-error(ng-switch-when='error')
          p.literal Sorry, an error occurred while submitting your transaction. Make sure you are connected to the Internet and try again later.
          p.literal Before trying again, please ensure that the transaction has not been executed already.
          p: button.btn.btn-default(ng-click='reset(true)') &laquo; Back

        //- 5. Done

        group.mode-done(ng-switch-when='done')
          group.pending(ng-show='tx_result=="pending"')
            h2.tx-status Your trade request has been submitted.
          group.result-success(ng-show='tx_result=="cleared"')
            h2.tx-status Request has been accepted!
          group.result-error(ng-show='tx_result=="error"')
            h2.tx-status Request has been denied!
            p We were unable to submit the request. Please try again later.
          group.result-malformed(ng-show='tx_result=="malformed"')
            h2.tx-status Request is malformed!
            p Your request is invalid, reason: {{engine_result}} - {{engine_result_message}}
          group.result-malformed(ng-show='tx_result=="claim"')
            h2.tx-status Transaction failed!
            p(ng-switch on="engine_result")
              span(ng-switch-when="tecUNFUNDED_ORDER")
                | You do not have enough {{order.sell_currency}} to create this order.
              span(ng-switch-when="tecINSUF_RESERVE_OFFER")
                | You must have at least {{account.reserve_to_add_trust | rpamount}} XRP to submit an order.&nbsp;
                a(href="https://ripple.com/wiki/Reserves", target="_blank") More information.
              span(ng-switch-default)
                | Error: {{engine_result_message}}
          group.result-failed(ng-show='tx_result=="failed"')
            h2.tx-status Trade failed!
            p(ng-switch on="engine_result")
              span(ng-switch-default) Trade failed, reason: {{engine_result_message}}
          group.result-failed(ng-show='tx_result=="local"')
            h2.tx-status Transaction failed!
            p(ng-switch on="engine_result")
              span(ng-switch-when="telINSUF_FEE_P")
                | The particular server you sent the transaction to was too busy to forward or process
                | your transaction at the fee you included in it.
          group.result-failed(ng-show='tx_result=="unknown"')
            h2.tx-status {{engine_result}}
            p(ng-switch on="engine_result")
              span(ng-switch-default) {{engine_result_message}}
          hr
          .actionLink
            a(href="#trade", ng-click="reset(true)") Submit another order

      .btn-group
        button.btn.btn-default(
          type="button"
          ng-class="{'btn-info': order.listing == 'orderbook'}"
          ng-click="setListing('orderbook')") Order book
        button.btn.btn-default(
          type="button"
          ng-disabled="!account.Balance"
          ng-class="{'btn-info': order.listing == 'my'}"
          ng-click="setListing('my')") My Orders

      .listings
        .my(ng-show="order.listing == 'my'")
          div(ng-hide="isEmpty(offers)")
            .row.head.hidden-xs
              .col-sm-1.type Type
              .col-sm-3.pair Pair
              .col-sm-3.price Price
              .col-sm-3.amount Amount
              .col-sm-2.action Action
          .row(ng-repeat="entry in offers", ng-class="{cancelled: cancelled}")
            .col-sm-1.type(data-label="Type") {{entry.type | rpucfirst}}
            .col-sm-3.pair(data-label="Pair")
              .first {{entry.first | rpcurrency}}
                span(ng-show="entry.first.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.first.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
              .second {{entry.second | rpcurrency}}
                span(ng-show="entry.second.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.second.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
            .col-sm-3.price.rpamount(data-label="Price") {{entry.second | rpamountratio:entry.first | rpamount:{precision: 5, min_precision: 5} }}
              span.currency  {{entry.second | rpcurrency}}
            .col-sm-3.amount.rpamount(data-label="Amount") {{entry.first | rpamount}}
              span.currency  {{entry.first | rpcurrency}}
            .col-sm-2.action
              a.danger(href="",ng-click='cancel_order()') Cancel
          .emptyMessage(ng-show="isEmpty(offers)")
            p.literal You haven&#39;t placed any orders.

        // - TODO hide one column (size/sum) to show bids/ask in the same line for mobile phones.
        // - TODO highlight changes
        .row.orderbook(ng-show="order.listing == 'orderbook'")
          .bids.col-xs-12.col-sm-6
            .title Bids
            .row.head(ng-show="bookFormatted.bids.length")
              .col-xs-4.sum Sum
                .currency {{book.bids[0].TakerPays | rpcurrency}}
              .col-xs-4.size Size
                .currency {{book.bids[0].TakerPays | rpcurrency}}
              .col-xs-4.price Bid Price
                .currency {{book.bids[0].TakerGets | rpcurrency}}
            .row(ng-repeat='order in bookFormatted.bids')
              .col-xs-4.rpamount.sum(rp-bind-color-amount="order.sum")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.TakerPays")
              .col-xs-4.rpamount.price(rp-bind-color-amount="order.price")
            .message(ng-show='!book.bids.length') There are currently no bids for this pair.
          .asks.col-xs-12.col-sm-6
            .title Asks
            .row.head(ng-show="bookFormatted.asks.length")
              .col-xs-4.price Ask Price
                .currency {{book.asks[0].TakerPays | rpcurrency}}
              .col-xs-4.size Size
                .currency {{book.asks[0].TakerGets | rpcurrency}}
              .col-xs-4.sum Sum
                .currency {{book.asks[0].TakerGets | rpcurrency}}
            .row(ng-repeat='order in bookFormatted.asks')
              .col-xs-4.rpamount.price(rp-bind-color-amount="order.price")
              .col-xs-4.rpamount.size(rp-bind-color-amount="order.TakerGets")
              .col-xs-4.rpamount.sum(rp-bind-color-amount="order.sum")
            .message(ng-show='!book.asks.length') There are currently no asks for this pair.
